function res=ProbLogRre_leaveOneOut(df,db)
% Predicted probability from logistic regression
% dn:fwi dc:BA
res=zeros(length(df),1);
for k=1:length(df)
    x1=[df(1:k-1);df(k+1:end)];
    y1=[db(1:k-1);db(k+1:end)];
    
    xe=x1 ;
    ye=y1;

   mdl=fitglm(xe,ye,'Distribution','binomial','Link','logit');
   res(k,1) = predict(mdl, df(k));

    % b=glmfit(xe,ye,'binomial', 'link', 'logit');
    % pe=glmval(b,dn(k), 'logit');
    % res(k,1)=pe;
end

        % for naive model
        N=length(dB_weekly_event);
        n_positive=sum(dB_weekly_event);
        n_negative=N-sum(dB_weekly_event);
        p_positive = 0.05; % 
        p_negative = 0.95; % 

        y_hat_positive=0.05;
        y_hat_negative=0.95;

        % brier score
        brierScore = calculateBrierScore(pro_dB, dB_weekly_event);
        bs_positive = (1 - p_positive)^2;
        bs_negative = (0 - p_positive)^2;
        brierScore_naiveModel = (n_positive * bs_positive + n_negative * bs_negative) / N;
        brierScore_SkillScore(ii,1)=1-brierScore./brierScore_naiveModel;


        % log loss
        logLoss= calculateLogLoss(pro_dB, dB_weekly_event);
        logLoss_naiveModel=-((n_positive / N) * log(y_hat_positive)+(n_negative / N) * log(y_hat_negative));
        logLoss_SkillScore(ii,1)=1-logLoss./logLoss_naiveModel;

         mean_fireevent(ii)=mean(pro_dB(dB_weekly_event==1));
         mean_Nofireevent(ii)=mean(pro_dB(dB_weekly_event==0));

         [~,~,~,dAUC_PR] = perfcurve(dB_weekly_event, pro_dB,1,...
             'xCrit', 'reca', 'yCrit', 'prec');
         AUC_PR_weekly(ii,zz)=dAUC_PR;

         [~,~,~,dAUC_ROC] = perfcurve(dB_weekly_event, pro_dB,1,...
             'xCrit', 'fpr', 'yCrit', 'tpr');
         AUC_ROC_weekly(ii,zz)=dAUC_ROC;
